<?php

namespace AppBundle\Repository;

/**
 * ScoutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScoutRepository extends \Doctrine\ORM\EntityRepository
{
    /**
      * Generation du code composant le matricule du scout
      * Avec la methode mt_rand(10000000,99999999)
      *
      * Author: Delrodie AMOIKON
      * Since: v1.0 | 27/02/2017
      */
    public function generationCode()
    {

        // Affectation a code la valeur aleatoire generée
        $matricule = mt_rand(1000, 9999);

        return $matricule;
    }

    /**
     * Géneration d'une lettre aleatoire composant le matricule du scout
     *
     * Author: Delrodie AMOIKON
     * Since Version v1.0 | 27/02/2017
     */
    public function generationLettre()
    {
        // Liste des lettres de l'alphabet
        $alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ";

        // Affectation d'une lettre aleatoire
        $lettre_aleatoire=$alphabet[rand(0,25)];

        return $lettre_aleatoire;
    }

    /**
     * Listes des scouts par région
     *
     * @author: Delrodie AMOIKON
     * @version v1.0 17/05/2017 22:56
     */
    public function findScoutByUser($regionID)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQuery('
            SELECT s, g
            FROM AppBundle:Scout s
            JOIN s.groupe g
            JOIN g.district d
            JOIN d.region r
            WHERE r.id = :id
        ')->setParameter('id', $regionID)
        ;
        return $qb->getResult();
    }

    /**
     * Verification de l'existence du scout dans le système
     * Renvoie de la region s'il existe
     *
     * @author: Delrodie AMOIKON
     * @version v1.0 18/05/2017 09:12
     */
    public function uniciteScout($nom, $prenoms, $date, $lieu)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQuery('
                SELECT r, d, g, s
                FROM AppBundle:Scout s
                JOIN s.groupe g
                JOIN g.district d
                JOIN d.region r
                WHERE s.nom = :nom
                AND s.prenoms = :prenoms
                AND s.datenaiss = :datenaissance
                AND s.lieunaiss = :lieu
        ')->setParameters(array(
              'nom' => $nom,
              'prenoms' => $prenoms,
              'datenaissance' => $date,
              'lieu'  => $lieu
        ))
        ;
        if ($qb->getResult()) {
          return $qb->getSingleResult();
        } else {
          return NULL;
        }


    }

}
