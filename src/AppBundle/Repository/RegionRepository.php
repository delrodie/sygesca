<?php

namespace AppBundle\Repository;

use AppBundle\Form\RegionType;

/**
 * RegionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegionRepository extends \Doctrine\ORM\EntityRepository
{
  /**
    * Fonction de recherche de la region
    * par son ID pour DistrictType.php
    *
    * Author: Delrodie AMOIKON
    * Date: 28/02/2017
    * Since: v1.0
    */
    public function getRegionNom($user)
    {
       //die($user);
        $em = $this->getEntityManager();

        $qb = $this->createQueryBuilder('r')
                   ->innerjoin('r.gestionnaires', 'g')
                   ->innerjoin('g.user', 'u')
                   ->where('u.id = :user')
                   ->setParameter('user', $user);
         return $qb;
    }

    /**
     * Reherche de la region concernée par la selection
     *
     * @author: Delrodie AMOIKON
     * @version v1.0 16/05/2017 07:13
     */
    public function getRegionNomById($region)
    {
        $em = $this->getEntityManager();
        $qb = $this->createQueryBuilder('r')
                   ->where('r.id = :region')
                   ->setParameter('region', $region);
        return $qb;
    }

    /**
     * Liste de toutes les régions
     *
     * @author Delrodie AMOIKON
     * @version v1.0 17/05/2017
     */
    public function findListeRegion()
    {
        $em = $this->getEntityManager();
        $qb = $this->createQueryBuilder('r')
                   //->where('r.id > 3')
                   ->orderBy('r.nom', 'ASC');
        return $qb;
    }

    /**
     * Fonction de recherche du code de la région du scout
     * par son ID
     *
     * @author: Delrodie AMOIKON
     * @version v1.0 17/05/2017 22:32
     */
    public function getRegionCode($id)
    {
         $em = $this->getEntityManager();
         $qb = $em->createQuery('
             SELECT r.code as code
             FROM AppBundle:Groupe g
             JOIN g.district d
             JOIN d.region r
             WHERE g.id = :id
         ')->setParameter('id', $id)
         ;
         try {
             $code = $qb->getSingleResult();
             foreach ($code as $key => $value) {
                 return $value;
             }

         } catch (NoResultException $e) {
             return $e;
         }
    }
}
